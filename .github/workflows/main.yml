name: Manual Test Run

on:
  workflow_dispatch:  # Manually triggered from the GitHub UI

jobs:
  test:
    runs-on: windows-latest  # Use a Windows runner
    
    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java (adjust the version if necessary)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'  # Specify your Java version here
          distribution: 'temurin'  # Specify the JDK distribution

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle*', '**/settings.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Install dependencies (run Gradle build)
      - name: Install dependencies
        run: ./gradlew build -x test  # Skip tests during build to only install dependencies

      # Step 5: Install Gauge (Direct Installation from EXE)
      - name: Install Gauge
        run: |
          # Download the Gauge installer
          Invoke-WebRequest -Uri https://github.com/getgauge/gauge/releases/download/v1.6.11/gauge-1.6.11-windows.x86_64.exe -OutFile gauge-installer.exe
          
          # Run the installer
          Start-Process -FilePath 'gauge-installer.exe' -ArgumentList '/quiet', '/norestart' -NoNewWindow -Wait
          
          # Clean up the installer
          Remove-Item -Force gauge-installer.exe

      # Step 6: Verify Gauge installation
      - name: Verify Gauge installation
        run: gauge --version  # Check if Gauge is installed successfully

      # Step 7: Run the tests in the Specs folder
      - name: Run Gauge tests
        run: gauge run Specs/  # Run tests from the Specs folder

      # Step 8: Upload test reports as an artifact
      - name: Upload Test Report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: build/reports/tests/test  # Adjust to your report location if needed
